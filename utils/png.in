#!@GUILE@ \
-e main
!#

;;; png.in -- Get various information from PNG files.

;; Copyright (C) 2025 Artyom V. Poptsov <poptsov.artyom@gmail.com>
;;
;; This program is free software: you can redistribute it and/or modify
;; it under the terms of the GNU General Public License as published by
;; the Free Software Foundation, either version 3 of the License, or
;; (at your option) any later version.
;;
;; The program is distributed in the hope that it will be useful,
;; but WITHOUT ANY WARRANTY; without even the implied warranty of
;; MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
;; GNU General Public License for more details.
;;
;; You should have received a copy of the GNU General Public License
;; along with the program.  If not, see <http://www.gnu.org/licenses/>.


;;; Commentary:


;;; Code:

(use-modules (ice-9 getopt-long)
             (png)
             (png cli common)
             (png cli command-describe)
             (png version))


(define (print-version)
  (format #t "png ~a~%" (png-version/string))
  (display "\
Copyright (C) 2025 Artyom V. Poptsov <poptsov.artyom@gmail.com>
License GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.

Written by Artyom V. Poptsov.
"))

(define (print-help-and-exit)
  (display "\
Usage: png [command] [options]

The default behavior of the program is to read PNG data from the standard
input or a file and describe its content.

Commands:
  describe       Describe the input PNG data in the human-readable form
                 (default behavior.)
  help           Print this help message.
  version        Print the Guile-PNG version.

Options:
  --help, -h                 Print this message and exit.
  --version                  Print Guile-PNG version.

For each command there's '--help' option (or '-h' for short) that prints a help
message for the given command.
")
  (exit))



(define %commands
  `((("describe")               ,command-describe)
    (("--version" "version")    ,(lambda (rest)
                                   (print-version)))
    (("help", "--help", "-h")   ,(lambda (rest)
                                   (print-help-and-exit)))))


(define (main args)
  "Entry point."
  (if (< (length args) 2)
      (command-describe args)
      (let* ((command (cadr args))
             (rest    (cons (car args) (cddr args)))
             (handler (command-match command %commands)))
        (if handler
            (handler rest)
            (begin
              (command-describe args))))))

;; Local Variables:
;; mode: Scheme
;; End:

;;; png.in ends here.
